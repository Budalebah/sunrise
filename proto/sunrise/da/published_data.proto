syntax = "proto3";

package sunrise.da;

import "google/protobuf/timestamp.proto";
import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "sunrise/da/params.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/sunriselayer/sunrise/x/da/types";

message PublishedData {
  string metadata_uri = 1;
  repeated bytes shard_double_hashes = 2;
  google.protobuf.Timestamp timestamp = 3
      [ (gogoproto.nullable) = false, (gogoproto.stdtime) = true ];
  string status = 4; // TODO: to be replaced with enum
  string publisher = 5;
  string challenger = 6;
  repeated cosmos.base.v1beta1.Coin collateral = 7 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
  google.protobuf.Timestamp challenge_timestamp = 8
      [ (gogoproto.nullable) = false, (gogoproto.stdtime) = true ];
}

message DataShares {
  repeated int64 indices = 1;
  repeated bytes shares = 2;
}

message Proof {
  string metadata_uri = 1;
  string sender = 2;
  // TODO: replace indices and shard hashes to proof
  repeated uint64 indices = 3;
  repeated bytes shard_hashes = 4;
}
