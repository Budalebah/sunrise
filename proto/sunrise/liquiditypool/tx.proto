syntax = "proto3";

package sunrise.liquiditypool;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "sunrise/liquiditypool/params.proto";
import "sunrise/liquiditypool/pool.proto";
import "sunrise/liquiditypool/position.proto";

option go_package = "github.com/sunriselayer/sunrise/x/liquiditypool/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams   (MsgUpdateParams  ) returns (MsgUpdateParamsResponse  );
  rpc CreatePool     (MsgCreatePool    ) returns (MsgCreatePoolResponse    );
  rpc CreatePosition (MsgCreatePosition) returns (MsgCreatePositionResponse);
  rpc CollectFees    (MsgCollectFees   ) returns (MsgCollectFeesResponse   );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                               "authority";
  option           (amino.name) = "sunrise/x/liquiditypool/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreatePool {
  option (cosmos.msg.v1.signer) = "sender";
  string sender     = 1;
  int64  lower_tick = 2;
  int64  upper_tick = 3;
}

message MsgCreatePoolResponse {
  uint64 id = 1;
}

message MsgCreatePosition {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1;
}

message MsgCreatePositionResponse {
  uint64 id = 1;
}

message MsgUpdatePosition {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1;
  uint64 id     = 2;
}

message MsgUpdatePositionResponse {}

message MsgDeletePosition {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1;
  uint64 id     = 2;
}

message MsgDeletePositionResponse {}

message MsgCollectFees {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1;
}

message MsgCollectFeesResponse {}

