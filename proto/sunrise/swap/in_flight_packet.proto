syntax = "proto3";
package sunrise.swap;

import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

import "sunrise/swap/route.proto";

option go_package = "github.com/sunriselayer/sunrise/x/swap/types";

message InFlightPacket {
  string src_port_id = 1;
  string src_channel_id = 2;
  uint64 sequence = 3;
  int32 retries_remaining = 4;
  bytes incoming_ack = 5;
  RouteResult result = 6  [
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  ReturnInfo return_info = 7;
}

message ReturnInfo {
  string return_port_id = 1;
  string return_channel_id = 2;
  string remainder_amount_in = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  bytes forward_ack = 4;
}
