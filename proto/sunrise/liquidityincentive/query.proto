syntax = "proto3";

package sunrise.liquidityincentive;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "sunrise/liquidityincentive/params.proto";
import "sunrise/liquidityincentive/epoch.proto";

option go_package = "github.com/sunriselayer/sunrise/x/liquidityincentive/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/params";
  
  }
  
  // Queries a list of Epoch items.
  rpc Epoch    (QueryEpochRequest) returns (QueryEpochResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/epoch/{id}";
  
  }
  rpc Epochs (QueryEpochsRequest) returns (QueryEpochsResponse) {
    option (google.api.http).get = "/sunrise/liquidityincentive/epoch";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryEpochRequest {
  uint64 id = 1;
}

message QueryEpochResponse {
  Epoch Epoch = 1 [(gogoproto.nullable) = false];
}

message QueryEpochsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryEpochsResponse {
  repeated Epoch                                  Epoch      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

