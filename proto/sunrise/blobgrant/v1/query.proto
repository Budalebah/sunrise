syntax = "proto3";

package sunrise.blobgrant.v1;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "sunrise/blobgrant/v1/params.proto";
import "sunrise/blobgrant/v1/registration.proto";

option go_package = "github.com/sunriselayer/sunrise-app/x/blobgrant/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sunrise/blobgrant/v1/params";
  
  }
  
  // Queries a list of Registration items.
  rpc Registration    (QueryGetRegistrationRequest) returns (QueryGetRegistrationResponse) {
    option (google.api.http).get = "/sunrise/blobgrant/v1/registration/{address}";
  
  }
  rpc RegistrationAll (QueryAllRegistrationRequest) returns (QueryAllRegistrationResponse) {
    option (google.api.http).get = "/sunrise/blobgrant/v1/registration";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetRegistrationRequest {
  string address = 1;
}

message QueryGetRegistrationResponse {
  Registration registration = 1 [(gogoproto.nullable) = false];
}

message QueryAllRegistrationRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRegistrationResponse {
  repeated Registration                           registration = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination   = 2;
}

